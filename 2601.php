<?php

class Solution {

    /**
        2601. Операція віднімання простого числа

        Вам надається цілочисельний масив nums з індексом 0 і довжиною n.

        Ви можете виконувати наступну операцію скільки завгодно разів:

        Виберіть індекс i, який ви раніше не вибирали, і виберіть просте число p, суворо менше, ніж nums[I], а потім відніміть p від nums[i].
        Поверніть значення true, якщо ви можете створити строго зростаючий масив, використовуючи описану вище операцію, і значення false в іншому випадку.

        Строго зростаючий масив - це масив, кожен елемент якого строго більше попереднього.

        https://leetcode.com/problems/shortest-subarray-with-or-at-least-k-ii/

     * @param Integer[] $nums
     * @return Boolean
     */
    function primeSubOperation($nums) {

        $primes = [
            2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 
            73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 
            157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 
            239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 
            331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 
            421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 
            509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 
            613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 
            709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 
            821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 
            919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997,
        ];
        $primes = array_combine($primes, array_fill(0, count($primes), true));

        for($i=0;$i<count($nums);$i++) {
            $prev = $nums[$i-1] ?? 0;

            if ($nums[$i] - $prev == 1) {
                continue;
            }

            $diff = $nums[$i] - ($prev+1);
            while (!array_key_exists($diff, $primes) && ($diff>1)) {
                $diff--;
            }

            if ($diff < 2) {
                if ($nums[$i] <= $prev) {
                    return false;
                } 
            }

            if ($diff == 1) {
                $diff = 0;
            }

            $nums[$i] -= $diff;
        }

        return true;
    }
}